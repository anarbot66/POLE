// SocialIcons.jsx
import React from "react";

// Вспомогательная функция для извлечения handle из URL
const getHandle = (url) => {
  try {
    const parts = url.split("/").filter(Boolean);
    const last = parts[parts.length - 1];
    return last.startsWith("@") ? last : `@${last}`;
  } catch {
    return "";
  }
};

// SVG-иконки
const ICONS = {
  twitter: (
    <svg width="20" height="20" viewBox="0 0 20 20" fill="white" xmlns="http://www.w3.org/2000/svg">
      <path d="M6.28251 18.75C13.8295 18.75 17.9592 12.4963 17.9592 7.08231C17.9592 6.90637 17.9592 6.73044 17.9512 6.5545C18.7515 5.97872 19.4478 5.25098 20 4.42729C19.2637 4.75517 18.4714 4.97109 17.6391 5.07505C18.4874 4.57124 19.1357 3.76353 19.4478 2.80389C18.6555 3.27571 17.7751 3.61159 16.8387 3.79552C16.0864 2.99582 15.022 2.5 13.8455 2.5C11.5806 2.5 9.7399 4.33932 9.7399 6.60248C9.7399 6.92237 9.77991 7.23425 9.84394 7.53814C6.43457 7.3702 3.40936 5.73081 1.38455 3.25172C1.03241 3.8595 0.832333 4.56324 0.832333 5.31496C0.832333 6.73843 1.56062 7.99397 2.65706 8.7297C1.98479 8.70571 1.35254 8.52178 0.80032 8.21789C0.80032 8.23388 0.80032 8.24988 0.80032 8.27387C0.80032 10.2571 2.21689 11.9205 4.08964 12.2964C3.7455 12.3923 3.38535 12.4403 3.0092 12.4403C2.7451 12.4403 2.489 12.4163 2.2409 12.3684C2.7611 13.9998 4.28171 15.1833 6.07443 15.2153C4.66587 16.3189 2.89716 16.9747 0.976391 16.9747C0.64826 16.9747 0.320128 16.9587 0 16.9187C1.80872 18.0703 3.96959 18.75 6.28251 18.75Z"/>
    </svg>
  ),
  instagram: (
    <svg width="20" height="20" viewBox="0 0 20 20" fill="white" xmlns="http://www.w3.org/2000/svg">
      <path d="M10.0009 0C7.28508 0 6.94424 0.0118753 5.87756 0.0604175C4.81297 0.109168 4.08629 0.277711 3.45045 0.525006C2.79274 0.780425 2.23481 1.1221 1.67898 1.67814C1.12272 2.23398 0.78105 2.7919 0.524797 3.44941C0.276878 4.08546 0.108126 4.81234 0.0602089 5.87652C0.0125 6.9432 0 7.28424 0 10.0001C0 12.716 0.0120837 13.0558 0.0604175 14.1224C0.109376 15.187 0.27792 15.9137 0.525006 16.5495C0.780633 17.2073 1.1223 17.7652 1.67835 18.321C2.23398 18.8773 2.7919 19.2198 3.4492 19.4752C4.08546 19.7225 4.81234 19.891 5.87673 19.9398C6.94341 19.9883 7.28403 20.0002 9.99969 20.0002C12.7158 20.0002 13.0556 19.9883 14.1222 19.9398C15.1868 19.891 15.9143 19.7225 16.5506 19.4752C17.2081 19.2198 17.7652 18.8773 18.3208 18.321C18.8771 17.7652 19.2187 17.2073 19.475 16.5498C19.7208 15.9137 19.8896 15.1868 19.9396 14.1226C19.9875 13.056 20 12.716 20 10.0001C20 7.28424 19.9875 6.94341 19.9396 5.87673C19.8896 4.81213 19.7208 4.08546 19.475 3.44962C19.2187 2.7919 18.8771 2.23398 18.3208 1.67814C17.7646 1.12189 17.2083 0.780217 16.55 0.525006C15.9125 0.277711 15.1854 0.109168 14.1208 0.0604175C13.0541 0.0118753 12.7145 0 9.99781 0H10.0009ZM9.10385 1.8021C9.3701 1.80169 9.66718 1.8021 10.0009 1.8021C12.671 1.8021 12.9874 1.81169 14.0418 1.8596C15.0168 1.90419 15.546 2.0671 15.8985 2.20398C16.3652 2.38523 16.6979 2.6019 17.0477 2.95191C17.3977 3.30191 17.6143 3.63525 17.796 4.10192C17.9329 4.454 18.096 4.98318 18.1404 5.95819C18.1883 7.01236 18.1987 7.32903 18.1987 9.99781C18.1987 12.6666 18.1883 12.9833 18.1404 14.0374C18.0958 15.0124 17.9329 15.5416 17.796 15.8937C17.6148 16.3604 17.3977 16.6927 17.0477 17.0425C16.6977 17.3925 16.3654 17.6091 15.8985 17.7904C15.5464 17.9279 15.0168 18.0904 14.0418 18.135C12.9876 18.1829 12.671 18.1933 10.0009 18.1933C7.3307 18.1933 7.01424 18.1829 5.96006 18.135C4.98505 18.09 4.45588 17.9271 4.10317 17.7902C3.6365 17.6089 3.30316 17.3923 2.95316 17.0423C2.60315 16.6923 2.38648 16.3598 2.20481 15.8929C2.06794 15.5408 1.90481 15.0116 1.86044 14.0366C1.81252 12.9824 1.80294 12.6658 1.80294 9.99531C1.80294 7.32487 1.81252 7.00987 1.86044 5.95569C1.90502 4.98068 2.06794 4.4515 2.20481 4.099C2.38607 3.63233 2.60315 3.29899 2.95316 2.94899C3.30316 2.59899 3.6365 2.38232 4.10317 2.20065C4.45567 2.06315 4.98505 1.90065 5.96006 1.85585C6.88257 1.81419 7.24008 1.80169 9.10385 1.7996V1.8021Z"/>
      <path d="M15.3389 3.46254C14.6764 3.46254 14.1389 3.99942 14.1389 4.66213C14.1389 5.32464 14.6764 5.86214 15.3389 5.86214C16.0014 5.86214 16.5389 5.32464 16.5389 4.66213C16.5389 3.99962 16.0014 3.46212 15.3389 3.46212V3.46254Z"/>
      <path d="M10.0009 4.86463C7.16487 4.86463 4.86547 7.16403 4.86547 10.0001C4.86547 12.8362 7.16487 15.1345 10.0009 15.1345C12.837 15.1345 15.1356 12.8362 15.1356 10.0001C15.1356 7.16403 12.8368 4.86463 10.0007 4.86463H10.0009ZM10.0009 6.66674C11.8418 6.66674 13.3343 8.15904 13.3343 10.0001C13.3343 11.841 11.8418 13.3335 10.0009 13.3335C8.15988 13.3335 6.66757 11.841 6.66757 10.0001C6.66757 8.15904 8.15988 6.66674 10.0009 6.66674V6.66674Z"/>
    </svg>
  ),
  tiktok: (
    <svg width="20" height="20" viewBox="0 0 20 20" fill="white" xmlns="http://www.w3.org/2000/svg">
      <path d="M11.25 1.27405e-05L13.7257 0C13.9045 0.893764 14.4007 2.02132 15.2688 3.13993C16.1193 4.236 17.2464 5.00001 18.75 5.00001V7.50001C16.5583 7.50001 14.9113 6.48306 13.75 5.21424V13.75C13.75 17.2018 10.9518 20 7.5 20C4.04822 20 1.25 17.2018 1.25 13.75C1.25 10.2982 4.04822 7.50001 7.5 7.50001V10C5.42893 10 3.75 11.6789 3.75 13.75C3.75 15.8211 5.42893 17.5 7.5 17.5C9.57107 17.5 11.25 15.8211 11.25 13.75V1.27405e-05Z"/>
    </svg>
  )
};

const SocialIcons = ({ social }) => (
  <div style={{ display: "flex",
  justifyContent: "center",  
  gap: "16px",
  width: "100%"              }}>
    {Object.entries(social).map(([network, url]) => {
      if (!url || !ICONS[network]) return null;
      const handle = getHandle(url);
      return (
        <a
          key={network}
          href={url}
          target="_blank"
          rel="noopener noreferrer"
          style={{
            textDecoration: "none",
            color: "white",
            display: "flex",
            flexDirection: "column",
            alignItems: "center",
            fontSize: "12px",
            gap: "15px"
          }}
        >
          {ICONS[network]}
          <span>{handle}</span>
        </a>
      );
    })}
  </div>
);

export default SocialIcons;
